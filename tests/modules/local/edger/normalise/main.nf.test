nextflow_process {

    name "Test Process EDGER_NORMALISE"
    script "modules/local/edger/normalise/main.nf"
    process "EDGER_NORMALISE"
    tag "edger"
    tag "normalisation"
    tag "module"

    test("Very small dataset") {

        when {

            process {
                """
                meta = [accession: "accession", design: file('$projectDir/tests/input/normalise/base/design.csv')]
                input[0] = [meta, file('$projectDir/tests/input/normalise/base/counts.csv')]
                """
            }
        }

        then {
            assert process.success
            assert snapshot(process.out.csv).match()
        }

    }

    test("Rows with many zeros") {

        when {

            process {
                """
                meta = [accession: "accession", design: file('$projectDir/tests/input/normalise/many_zeros/design.csv')]
                input[0] = [meta, file('$projectDir/tests/input/normalise/many_zeros/counts.csv')]
                """
            }
        }

        then {
            assert process.success
            assert snapshot(process.out.csv).match()
            with(process.out.csv) {
                assert path(get(0)).readLines().size() == 5
            }
        }

    }

    test("One group") {

        when {

            process {
                """
                meta = [accession: "accession", design: file('$projectDir/tests/input/normalise/one_group/design.csv')]
                input[0] = [meta, file('$projectDir/tests/input/normalise/one_group/counts.csv')]
                """
            }
        }

        then {
            assert process.success
            assert snapshot(process.out.csv).match()
        }

    }

}
