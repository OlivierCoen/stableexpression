nextflow_process {

    name "Test Process NORMALISATION_DESEQ2"
    script "modules/local/normalisation/deseq2/main.nf"
    process "NORMALISATION_DESEQ2"
    tag "deseq2"
    tag "normalise"
    tag "module"

    test("Very small dataset") {

        when {

            process {
                """
                meta = [accession: "accession", design: file('$projectDir/tests/test_data/normalisation/base/design.csv')]
                input[0] = [meta, file('$projectDir/tests/test_data/normalisation/base/counts.csv')]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out.cpm).match() }
            )
        }

    }

    test("Rows with many zeros") {

        tag "deseq2_many_zeros"

        when {

            process {
                """
                meta = [accession: "accession", design: file('$projectDir/tests/test_data/normalisation/many_zeros/design.csv')]
                input[0] = [meta, file('$projectDir/tests/test_data/normalisation/many_zeros/counts.csv')]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out.cpm).match() }
            )
        }

    }

    test("One group") {

        when {

            process {
                """
                meta = [accession: "accession", design: file('$projectDir/tests/test_data/normalisation/one_group/design.csv')]
                input[0] = [meta, file('$projectDir/tests/test_data/normalisation/one_group/counts.csv')]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out.cpm).match() }
            )
        }

    }

}
