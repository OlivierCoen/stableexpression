nextflow_process {

    name "Test Process MERGE_DATA"
    script "modules/local/merge_data/main.nf"
    process "MERGE_DATA"
    tag "merge"
    tag "module"

    test("Merge counts - filter out genes with zero counts") {

        when {
            process {
                """
                ch_counts = Channel.fromPath( '$projectDir/tests/test_data/merge_data/input/counts*.parquet', checkIfExists: true).collect()
                ch_designs = Channel.fromPath( '$projectDir/tests/test_data/merge_data/input/design*.csv', checkIfExists: true).collect()
                ch_dataset_stat = Channel.fromPath( '$projectDir/tests/test_data/merge_data/input/dataset_stat*.csv', checkIfExists: true).collect()
                nb_candidate_genes = 3
                input[0] = ch_counts
                input[1] = ch_designs
                input[2] = ch_dataset_stat
                input[3] = nb_candidate_genes
                """
            }

        }

        then {
            assertAll(
                { assert process.success },
                { assert path(process.out.all_counts[0]).exists() },
                { with( path(process.out.all_designs[0]).csv( header: true ) ) {
                    assert columnNames == ["batch", "condition", "sample"]
                    assert rowCount == 27
                }},
                { assert path(process.out.candidate_gene_counts[0]).exists() },
                { with( path(process.out.distribution_correlations[0]).csv( header: false ) ) {
                    assert rowCount == 27
                    assert columnCount == 2
                }},
                { with( path(process.out.gene_count_statistics[0]).csv( header: false ) ) {
                    assert rowCount == 27
                    assert columnCount == 2
                }},
                { with( path(process.out.skewness_statistics[0]).csv( header: false ) ) {
                    assert rowCount == 27
                    assert columnCount == 2
                }},
                { with( path(process.out.ks_test_statistics[0]).csv( header: false ) ) {
                    assert rowCount == 27
                    assert columnCount == 2
                }}
            )


        }

    }

}
